/* styles.css */

body {
    font-family: 'Arial', sans-serif;
    background-color: #333;  /* Dark theme background color */
    color: #fff;            /* Dark theme text color */
    transition: background-color 0.3s, color 0.3s;
    padding: 50px; /* Add padding to the body */
}

h1, h2 {
    color: inherit;  /* Inherit text color from the body */
    text-align: center;
}

button {
    text-align: center;
    background-color: #444;  /* Dark theme result background color */
    border: none;
    color: #fff;            /* Dark theme result text color */
    padding: 7px 16px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 12px;
}

form {
    margin-bottom: 20px;
}

label {
    display: inline-block;
    margin-bottom: 5px;
}

#checklistForm {
    column-count: 3;  /* Adjust the number of columns as needed */
    align-items: center;
}

#checklistForm label {
    display:inline;
}

#checklistForm input[type="checkbox"] {
    margin-bottom: 5px;
    /* Hide the default checkbox */
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    /* Use a solid-colored grey box */
    background-color: #ccc;
    border: 1px solid #999;
    border-radius: 3px;
    width: 20px;
    height: 20px;
    vertical-align: middle;
    /*display: inline-block;
    position: relative;
    /* Add some padding to the left for visual spacing */
    /*padding-left: 30px;*/
    cursor: pointer;
}

#checklistForm input[type="checkbox"]:checked {
    /* Change the color when checked to red */
    background-color: #ff6666;
}

#checklistForm input[type="checkbox"]:checked:hover {
    /* Keep the red color on hover when checked */
    background-color: #ff6666;
}

#checklistForm input[type="checkbox"]:hover:not(:checked) {
    /* Darken the color on hover when unchecked */
    background-color: #999;
}

#checklistForm input[type="checkbox"]::before {
    /* Create a pseudo-element to represent the checkmark */
    /*content: '\2713'; /* Unicode checkmark character */
    font-size: 16px;
    color: #fff;
    /*position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);*/
    opacity: 0; /* Initially hidden */
}

#checklistForm input[type="checkbox"]:checked::before {
    /* Show the checkmark when the checkbox is checked */
    opacity: 1;
}

#result {
    margin-top: 20px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-color: #444;  /* Dark theme result background color */
    color: #fff;            /* Dark theme result text color */
    text-align: center;
}



/* Light theme styles (overrides dark theme styles when body has .light-theme class) */
body.light-theme {
    background-color: #fff;
    color: #333;
}

body.light-theme h1, body.light-theme h2 {
    color: inherit;
}

body.light-theme button {
    background-color: #fff;
    color: #333;
}

body.light-theme #result {
    background-color: #fff;
    color: #333;
}


/* Responsive adjustments for smaller screens */
@media screen and (max-width: 768px) {
    #checklistForm {
        column-count: 1;  /* Change to a single column for smaller screens */
    }
}

/* Responsive adjustments for medium screens */
@media screen and (min-width: 769px) and (max-width: 1024px) {
    #checklistForm {
        column-count: 2;  /* Change to two columns for medium-sized screens */
    }
}

/* Responsive adjustments for larger screens */
@media screen and (min-width: 1025px) {
    #checklistForm {
        column-count: 3;  /* Change to three columns for larger screens */
    }
}